name: Build Docker Image and Push to Docker Hub
on:
  push:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push user-app image
      - name: Build and Push Docker image for user-app
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.user-app
          push: true
          tags: onkar838/user-app:latest
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}

      # Build and push bank-server image
      - name: Build and Push Docker image for bank-server
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.bank-server
          push: true
          tags: onkar838/bank-server:latest
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}

      # Build and push webhook image
      - name: Build and Push Docker image for webhook
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.webhook
          push: true
          tags: onkar838/webhook:latest
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}

      - name: Verify Pushed Images
        run: |
          docker pull onkar838/user-app:latest
          docker pull onkar838/bank-server:latest
          docker pull onkar838/webhook:latest

      - name: Deploy to EC2 with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu

            # Remove existing E-wallet directory if it exists
            if [ -d "E-wallet" ]; then
              sudo rm -rf E-wallet
            fi

            # Navigate into the E-wallet directory
            cd E-wallet

            # Verify docker-compose.yml is present
            ls -la

            # Pull the latest Docker images
            sudo docker-compose pull

            # Restart the services using Docker Compose
            sudo docker-compose down
            sudo docker-compose up -d
